File References

- Runner:
  - AppDelegate.swift
  - MainFlutterWindow.swift
  - DebugProfile.entitlements
  - Release.entitlements
  - Resources:
    - Assets.xcassets
    - MainMenu.xib:
      - Base
    - Info.plist
  - Configs:
    - AppInfo.xcconfig
    - Debug.xcconfig
    - Release.xcconfig
    - Warnings.xcconfig

- Flutter:
  - GeneratedPluginRegistrant.swift
  - Flutter-Debug.xcconfig
  - Flutter-Release.xcconfig
  - Flutter-Generated.xcconfig

- RunnerTests:
  - RunnerTests.swift

- Products:
  - src.app
  - RunnerTests.xctest

- Frameworks:
  - Pods_Runner.framework
  - Pods_RunnerTests.framework

- Pods:
  - Pods-Runner.debug.xcconfig
  - Pods-Runner.release.xcconfig
  - Pods-Runner.profile.xcconfig
  - Pods-RunnerTests.debug.xcconfig
  - Pods-RunnerTests.release.xcconfig
  - Pods-RunnerTests.profile.xcconfig


Targets

- Runner:
    Build Phases:
    - "[CP] Check Pods Manifest.lock":
        Input File List Paths: []
        Input Paths:
        - "${PODS_PODFILE_DIR_PATH}/Podfile.lock"
        - "${PODS_ROOT}/Manifest.lock"
        Output File List Paths: []
        Output Paths:
        - "$(DERIVED_FILE_DIR)/Pods-Runner-checkManifestLockResult.txt"
        Shell Path: "/bin/sh"
        Shell Script: |
          diff "${PODS_PODFILE_DIR_PATH}/Podfile.lock" "${PODS_ROOT}/Manifest.lock" > /dev/null
          if [ $? != 0 ] ; then
              # print error to STDERR
              echo "error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation." >&2
              exit 1
          fi
          # This output is used by Xcode 'outputs' to avoid re-running this script phase.
          echo "SUCCESS" > "${SCRIPT_OUTPUT_FILE_0}"
    - Sources:
      - MainFlutterWindow.swift
      - AppDelegate.swift
      - GeneratedPluginRegistrant.swift
    - Frameworks:
      - Pods_Runner.framework
    - Resources:
      - Assets.xcassets
      - MainMenu.xib
    - Bundle Framework:
        Destination Path: ''
        Destination Subfolder: frameworks
        Files: []
    - ShellScript:
        Input File List Paths: []
        Input Paths: []
        Output File List Paths: []
        Output Paths: []
        Shell Path: "/bin/sh"
        Shell Script: 'echo "$PRODUCT_NAME.app" > "$PROJECT_DIR"/Flutter/ephemeral/.app_filename
          && "$FLUTTER_ROOT"/packages/flutter_tools/bin/macos_assemble.sh embed

          '
    - "[CP] Embed Pods Frameworks":
        Input File List Paths:
        - "${PODS_ROOT}/Target Support Files/Pods-Runner/Pods-Runner-frameworks-${CONFIGURATION}-input-files.xcfilelist"
        Input Paths: []
        Output File List Paths:
        - "${PODS_ROOT}/Target Support Files/Pods-Runner/Pods-Runner-frameworks-${CONFIGURATION}-output-files.xcfilelist"
        Output Paths: []
        Shell Path: "/bin/sh"
        Shell Script: '"${PODS_ROOT}/Target Support Files/Pods-Runner/Pods-Runner-frameworks.sh"

          '
    Build Configurations:
    - Debug:
        Build Settings:
          ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
          CLANG_ENABLE_MODULES: 'YES'
          CODE_SIGN_ENTITLEMENTS: Runner/DebugProfile.entitlements
          CODE_SIGN_STYLE: Automatic
          COMBINE_HIDPI_IMAGES: 'YES'
          INFOPLIST_FILE: Runner/Info.plist
          LD_RUNPATH_SEARCH_PATHS:
          - "$(inherited)"
          - "@executable_path/../Frameworks"
          PROVISIONING_PROFILE_SPECIFIER: ''
          SWIFT_OPTIMIZATION_LEVEL: "-Onone"
          SWIFT_VERSION: '5.0'
        Base Configuration: AppInfo.xcconfig
    - Release:
        Build Settings:
          ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
          CLANG_ENABLE_MODULES: 'YES'
          CODE_SIGN_ENTITLEMENTS: Runner/Release.entitlements
          CODE_SIGN_STYLE: Automatic
          COMBINE_HIDPI_IMAGES: 'YES'
          INFOPLIST_FILE: Runner/Info.plist
          LD_RUNPATH_SEARCH_PATHS:
          - "$(inherited)"
          - "@executable_path/../Frameworks"
          PROVISIONING_PROFILE_SPECIFIER: ''
          SWIFT_VERSION: '5.0'
        Base Configuration: AppInfo.xcconfig
    - Profile:
        Build Settings:
          ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
          CLANG_ENABLE_MODULES: 'YES'
          CODE_SIGN_ENTITLEMENTS: Runner/DebugProfile.entitlements
          CODE_SIGN_STYLE: Automatic
          COMBINE_HIDPI_IMAGES: 'YES'
          INFOPLIST_FILE: Runner/Info.plist
          LD_RUNPATH_SEARCH_PATHS:
          - "$(inherited)"
          - "@executable_path/../Frameworks"
          PROVISIONING_PROFILE_SPECIFIER: ''
          SWIFT_VERSION: '5.0'
        Base Configuration: AppInfo.xcconfig

- RunnerTests:
    Build Phases:
    - "[CP] Check Pods Manifest.lock":
        Input File List Paths: []
        Input Paths:
        - "${PODS_PODFILE_DIR_PATH}/Podfile.lock"
        - "${PODS_ROOT}/Manifest.lock"
        Output File List Paths: []
        Output Paths:
        - "$(DERIVED_FILE_DIR)/Pods-RunnerTests-checkManifestLockResult.txt"
        Shell Path: "/bin/sh"
        Shell Script: |
          diff "${PODS_PODFILE_DIR_PATH}/Podfile.lock" "${PODS_ROOT}/Manifest.lock" > /dev/null
          if [ $? != 0 ] ; then
              # print error to STDERR
              echo "error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation." >&2
              exit 1
          fi
          # This output is used by Xcode 'outputs' to avoid re-running this script phase.
          echo "SUCCESS" > "${SCRIPT_OUTPUT_FILE_0}"
    - Sources:
      - RunnerTests.swift
    - Frameworks:
      - Pods_RunnerTests.framework
    - Resources: []
    Build Configurations:
    - Debug:
        Build Settings:
          BUNDLE_LOADER: "$(TEST_HOST)"
          CURRENT_PROJECT_VERSION: '1'
          GENERATE_INFOPLIST_FILE: 'YES'
          MARKETING_VERSION: '1.0'
          PRODUCT_BUNDLE_IDENTIFIER: best.jat.src.RunnerTests
          PRODUCT_NAME: "$(TARGET_NAME)"
          SWIFT_VERSION: '5.0'
          TEST_HOST: "$(BUILT_PRODUCTS_DIR)/src.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/src"
        Base Configuration: Pods-RunnerTests.debug.xcconfig
    - Release:
        Build Settings:
          BUNDLE_LOADER: "$(TEST_HOST)"
          CURRENT_PROJECT_VERSION: '1'
          GENERATE_INFOPLIST_FILE: 'YES'
          MARKETING_VERSION: '1.0'
          PRODUCT_BUNDLE_IDENTIFIER: best.jat.src.RunnerTests
          PRODUCT_NAME: "$(TARGET_NAME)"
          SWIFT_VERSION: '5.0'
          TEST_HOST: "$(BUILT_PRODUCTS_DIR)/src.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/src"
        Base Configuration: Pods-RunnerTests.release.xcconfig
    - Profile:
        Build Settings:
          BUNDLE_LOADER: "$(TEST_HOST)"
          CURRENT_PROJECT_VERSION: '1'
          GENERATE_INFOPLIST_FILE: 'YES'
          MARKETING_VERSION: '1.0'
          PRODUCT_BUNDLE_IDENTIFIER: best.jat.src.RunnerTests
          PRODUCT_NAME: "$(TARGET_NAME)"
          SWIFT_VERSION: '5.0'
          TEST_HOST: "$(BUILT_PRODUCTS_DIR)/src.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/src"
        Base Configuration: Pods-RunnerTests.profile.xcconfig

- Flutter Assemble:
    Build Phases:
    - ShellScript:
        Input File List Paths:
        - Flutter/ephemeral/FlutterInputs.xcfilelist
        Input Paths:
        - Flutter/ephemeral/tripwire
        Output File List Paths:
        - Flutter/ephemeral/FlutterOutputs.xcfilelist
        Output Paths: []
        Shell Path: "/bin/sh"
        Shell Script: '"$FLUTTER_ROOT"/packages/flutter_tools/bin/macos_assemble.sh
          && touch Flutter/ephemeral/tripwire'
    Build Configurations:
    - Debug:
        Build Settings:
          CODE_SIGN_STYLE: Manual
          PRODUCT_NAME: "$(TARGET_NAME)"
    - Release:
        Build Settings:
          CODE_SIGN_STYLE: Automatic
          PRODUCT_NAME: "$(TARGET_NAME)"
    - Profile:
        Build Settings:
          CODE_SIGN_STYLE: Manual
          PRODUCT_NAME: "$(TARGET_NAME)"


Build Configurations

- Debug:
    Build Settings:
      ALWAYS_SEARCH_USER_PATHS: 'NO'
      CLANG_ANALYZER_NONNULL: 'YES'
      CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION: YES_AGGRESSIVE
      CLANG_CXX_LANGUAGE_STANDARD: gnu++14
      CLANG_CXX_LIBRARY: libc++
      CLANG_ENABLE_MODULES: 'YES'
      CLANG_ENABLE_OBJC_ARC: 'YES'
      CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING: 'YES'
      CLANG_WARN_BOOL_CONVERSION: 'YES'
      CLANG_WARN_CONSTANT_CONVERSION: 'YES'
      CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS: 'YES'
      CLANG_WARN_DIRECT_OBJC_ISA_USAGE: YES_ERROR
      CLANG_WARN_DOCUMENTATION_COMMENTS: 'YES'
      CLANG_WARN_EMPTY_BODY: 'YES'
      CLANG_WARN_ENUM_CONVERSION: 'YES'
      CLANG_WARN_INFINITE_RECURSION: 'YES'
      CLANG_WARN_INT_CONVERSION: 'YES'
      CLANG_WARN_NON_LITERAL_NULL_CONVERSION: 'YES'
      CLANG_WARN_OBJC_LITERAL_CONVERSION: 'YES'
      CLANG_WARN_OBJC_ROOT_CLASS: YES_ERROR
      CLANG_WARN_RANGE_LOOP_ANALYSIS: 'YES'
      CLANG_WARN_SUSPICIOUS_MOVE: 'YES'
      CODE_SIGN_IDENTITY: "-"
      COPY_PHASE_STRIP: 'NO'
      DEBUG_INFORMATION_FORMAT: dwarf
      ENABLE_STRICT_OBJC_MSGSEND: 'YES'
      ENABLE_TESTABILITY: 'YES'
      GCC_C_LANGUAGE_STANDARD: gnu11
      GCC_DYNAMIC_NO_PIC: 'NO'
      GCC_NO_COMMON_BLOCKS: 'YES'
      GCC_OPTIMIZATION_LEVEL: '0'
      GCC_PREPROCESSOR_DEFINITIONS:
      - DEBUG=1
      - "$(inherited)"
      GCC_WARN_64_TO_32_BIT_CONVERSION: 'YES'
      GCC_WARN_ABOUT_RETURN_TYPE: YES_ERROR
      GCC_WARN_UNINITIALIZED_AUTOS: YES_AGGRESSIVE
      GCC_WARN_UNUSED_FUNCTION: 'YES'
      GCC_WARN_UNUSED_VARIABLE: 'YES'
      MACOSX_DEPLOYMENT_TARGET: '10.14'
      MTL_ENABLE_DEBUG_INFO: 'YES'
      ONLY_ACTIVE_ARCH: 'YES'
      SDKROOT: macosx
      SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG
      SWIFT_OPTIMIZATION_LEVEL: "-Onone"
    Base Configuration: Debug.xcconfig

- Profile:
    Build Settings:
      ALWAYS_SEARCH_USER_PATHS: 'NO'
      CLANG_ANALYZER_NONNULL: 'YES'
      CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION: YES_AGGRESSIVE
      CLANG_CXX_LANGUAGE_STANDARD: gnu++14
      CLANG_CXX_LIBRARY: libc++
      CLANG_ENABLE_MODULES: 'YES'
      CLANG_ENABLE_OBJC_ARC: 'YES'
      CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING: 'YES'
      CLANG_WARN_BOOL_CONVERSION: 'YES'
      CLANG_WARN_CONSTANT_CONVERSION: 'YES'
      CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS: 'YES'
      CLANG_WARN_DIRECT_OBJC_ISA_USAGE: YES_ERROR
      CLANG_WARN_DOCUMENTATION_COMMENTS: 'YES'
      CLANG_WARN_EMPTY_BODY: 'YES'
      CLANG_WARN_ENUM_CONVERSION: 'YES'
      CLANG_WARN_INFINITE_RECURSION: 'YES'
      CLANG_WARN_INT_CONVERSION: 'YES'
      CLANG_WARN_NON_LITERAL_NULL_CONVERSION: 'YES'
      CLANG_WARN_OBJC_LITERAL_CONVERSION: 'YES'
      CLANG_WARN_OBJC_ROOT_CLASS: YES_ERROR
      CLANG_WARN_RANGE_LOOP_ANALYSIS: 'YES'
      CLANG_WARN_SUSPICIOUS_MOVE: 'YES'
      CODE_SIGN_IDENTITY: "-"
      COPY_PHASE_STRIP: 'NO'
      DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
      ENABLE_NS_ASSERTIONS: 'NO'
      ENABLE_STRICT_OBJC_MSGSEND: 'YES'
      GCC_C_LANGUAGE_STANDARD: gnu11
      GCC_NO_COMMON_BLOCKS: 'YES'
      GCC_WARN_64_TO_32_BIT_CONVERSION: 'YES'
      GCC_WARN_ABOUT_RETURN_TYPE: YES_ERROR
      GCC_WARN_UNINITIALIZED_AUTOS: YES_AGGRESSIVE
      GCC_WARN_UNUSED_FUNCTION: 'YES'
      GCC_WARN_UNUSED_VARIABLE: 'YES'
      MACOSX_DEPLOYMENT_TARGET: '10.14'
      MTL_ENABLE_DEBUG_INFO: 'NO'
      SDKROOT: macosx
      SWIFT_COMPILATION_MODE: wholemodule
      SWIFT_OPTIMIZATION_LEVEL: "-O"
    Base Configuration: Release.xcconfig

- Release:
    Build Settings:
      ALWAYS_SEARCH_USER_PATHS: 'NO'
      CLANG_ANALYZER_NONNULL: 'YES'
      CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION: YES_AGGRESSIVE
      CLANG_CXX_LANGUAGE_STANDARD: gnu++14
      CLANG_CXX_LIBRARY: libc++
      CLANG_ENABLE_MODULES: 'YES'
      CLANG_ENABLE_OBJC_ARC: 'YES'
      CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING: 'YES'
      CLANG_WARN_BOOL_CONVERSION: 'YES'
      CLANG_WARN_CONSTANT_CONVERSION: 'YES'
      CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS: 'YES'
      CLANG_WARN_DIRECT_OBJC_ISA_USAGE: YES_ERROR
      CLANG_WARN_DOCUMENTATION_COMMENTS: 'YES'
      CLANG_WARN_EMPTY_BODY: 'YES'
      CLANG_WARN_ENUM_CONVERSION: 'YES'
      CLANG_WARN_INFINITE_RECURSION: 'YES'
      CLANG_WARN_INT_CONVERSION: 'YES'
      CLANG_WARN_NON_LITERAL_NULL_CONVERSION: 'YES'
      CLANG_WARN_OBJC_LITERAL_CONVERSION: 'YES'
      CLANG_WARN_OBJC_ROOT_CLASS: YES_ERROR
      CLANG_WARN_RANGE_LOOP_ANALYSIS: 'YES'
      CLANG_WARN_SUSPICIOUS_MOVE: 'YES'
      CODE_SIGN_IDENTITY: "-"
      COPY_PHASE_STRIP: 'NO'
      DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
      ENABLE_NS_ASSERTIONS: 'NO'
      ENABLE_STRICT_OBJC_MSGSEND: 'YES'
      GCC_C_LANGUAGE_STANDARD: gnu11
      GCC_NO_COMMON_BLOCKS: 'YES'
      GCC_WARN_64_TO_32_BIT_CONVERSION: 'YES'
      GCC_WARN_ABOUT_RETURN_TYPE: YES_ERROR
      GCC_WARN_UNINITIALIZED_AUTOS: YES_AGGRESSIVE
      GCC_WARN_UNUSED_FUNCTION: 'YES'
      GCC_WARN_UNUSED_VARIABLE: 'YES'
      MACOSX_DEPLOYMENT_TARGET: '10.14'
      MTL_ENABLE_DEBUG_INFO: 'NO'
      SDKROOT: macosx
      SWIFT_COMPILATION_MODE: wholemodule
      SWIFT_OPTIMIZATION_LEVEL: "-O"
    Base Configuration: Release.xcconfig
